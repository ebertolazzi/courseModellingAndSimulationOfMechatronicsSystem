%
% Matlab code for the Course:
%
%     Modelling and Simulation Mechatronics System
%
% by
% Enrico Bertolazzi
% Dipartimento di Ingegneria Industriale
% Universita` degli Studi di Trento
% email: enrico.bertolazzi@unitn.it
%
classdef ParabolicPendulum < DAEbaseClass
  properties (SetAccess = protected, Hidden = true)
    g
  end
  methods
    function self = ParabolicPendulum()
      self@DAEbaseClass('ParabolicPendulum');
      self.g = 9.81;
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function ode = f( self, t, Z )
      x      = Z(1);
      y      = Z(2);
      u      = Z(3);
      v      = Z(4);
      lambda = Z(5);
      g      = self.g;
      % automatically generated by MAPLE
      ode_1 = u;
      ode_2 = v;
      t1 = (x ^ 2);
      t3 = 4 * y;
      ode_3 = -2 * (lambda * (4 * t1 - t3 + 1) + g) * x;
      t9 = t1 ^ 2;
      t19 = (u ^ 2);
      ode_4 = (lambda * (32 * t9 + t1 * (-32 * y + 12) - t3)) / 0.2e1 + (4 * g * t1) - (2 * t19) + g / 0.2e1;
      t45 = y ^ 2;
      t46 = 4 * t45;
      ode_5 = 0.1e1 / (64 * t9 * t1 + t9 * (-128 * y + 36) + t1 * (64 * t45 - 40 * y + 4) + t46) * (-(768 * u * lambda * t9 * x) + (256 * lambda * t9 * v) - 0.160e3 * t1 * x * ((-0.32e2 / 0.5e1 * y + 0.9e1 / 0.5e1) * lambda + g) * u + 0.48e2 * t1 * v * ((-0.16e2 / 0.3e1 * y + 0.5e1 / 0.3e1) * lambda + g) + 0.64e2 * x * (0.3e1 / 0.4e1 * t19 + lambda * (-t46 + 0.5e1 / 0.2e1 * y - 0.1e1 / 0.4e1) + g * (y - 0.11e2 / 0.32e2)) * u + 0.3e1 * v * (-(8 * t19) - 0.16e2 / 0.3e1 * y * lambda + g));
      ode = zeros(5,1);
      ode(1) = ode_1;
      ode(2) = ode_2;
      ode(3) = ode_3;
      ode(4) = ode_4;
      ode(5) = ode_5;
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function jac = DfDx( self, t, Z )
      x      = Z(1);
      y      = Z(2);
      u      = Z(3);
      v      = Z(4);
      lambda = Z(5);
      g      = self.g;
      % automatically generated by MAPLE
      jac = zeros(5,5);
      jac_1_3 = 1;
      jac_2_4 = 1;
      t1 = (x ^ 2);
      t3 = 8 * y;
      jac_3_1 = lambda * (-24 * t1 + t3 - 2) - 2 * g;
      jac_3_2 = 8 * x * lambda;
      t8 = t1 * x;
      jac_3_5 = -8 * t8 + x * (t3 - 2);
      jac_4_1 = 0.8e1 * x * (lambda * ((8 * t1) - (4 * y) + 0.3e1 / 0.2e1) + g);
      jac_4_2 = lambda * (-16 * t1 - 2);
      jac_4_3 = -4 * u;
      t21 = t1 ^ 2;
      t26 = 2 * y;
      jac_4_5 = 16 * t21 + t1 * (-16 * y + 6) - t26;
      t27 = u * lambda;
      t28 = t21 ^ 2;
      t32 = lambda * v;
      t33 = t28 * x;
      t36 = y * lambda;
      t46 = v * (-0.16e2 / 0.3e1 * t36 + 0.5e1 / 0.3e1 * lambda + g);
      t47 = t21 * t8;
      t50 = u ^ 2;
      t52 = y ^ 2;
      t53 = t52 * lambda;
      t54 = 0.8e1 / 0.5e1 * t53;
      t62 = t21 * t1;
      t65 = 0.3e1 / 0.4e1 * t50;
      t66 = 0.8e1 / 0.3e1 * t53;
      t68 = g + 2 * lambda;
      t69 = y * t68;
      t70 = 0.3e1 / 0.8e1 * g;
      t74 = t21 * x;
      t80 = t52 * y;
      t84 = t52 * (g + lambda);
      t109 = t52 ^ 2;
      t138 = u * t52;
      t142 = (g + 0.5e1 / 0.2e1 * lambda) * y;
      t148 = (6144 * t28 * t1 * t27) - (4096 * t33 * t32) + 0.3840e4 * t28 * (-0.16e2 / 0.5e1 * t36 + g + 0.9e1 / 0.10e2 * lambda) * u - 0.1536e4 * t47 * t46 - 0.5120e4 * t62 * (0.3e1 / 0.8e1 * t50 - t54 + (g + 0.4e1 / 0.5e1 * lambda) * y - 0.5e1 / 0.16e2 * g - 0.49e2 / 0.320e3 * lambda) * u + 0.1536e4 * t74 * (t65 - t66 + t69 - t70 - 0.29e2 / 0.96e2 * lambda) * v + 0.1792e4 * t21 * (t50 * (0.9e1 / 0.7e1 * y - 0.81e2 / 0.224e3) - 0.16e2 / 0.7e1 * lambda * t80 + t84 + (-0.5e1 / 0.8e1 * g - 0.61e2 / 0.112e3 * lambda) * y + 0.31e2 / 0.256e3 * g + 0.9e1 / 0.224e3 * lambda) * u + 0.192e3 * t8 * (t50 * (-t3 + 0.9e1 / 0.4e1) - t66 + (g + 0.3e1 / 0.2e1 * lambda) * y - 0.9e1 / 0.32e2 * g) * v - 0.512e3 * t1 * u * (t50 * (0.3e1 / 0.4e1 * t52 - 0.15e2 / 0.32e2 * y + 0.3e1 / 0.64e2) - (4 * lambda * t109) + (t80 * t68) + t52 * (-g / 0.2e1 - 0.39e2 / 0.32e2 * lambda) + (0.71e2 / 0.256e3 * g + 0.5e1 / 0.16e2 * lambda) * y - 0.11e2 / 0.512e3 * g - lambda / 0.64e2) + 0.30e2 * x * v * (t50 * (0.64e2 / 0.5e1 * t52 - t3 + 0.4e1 / 0.5e1) - t66 + (g + 0.8e1 / 0.15e2 * lambda) * y - g / 0.10e2) + 0.32e2 * (t65 - (4 * t53) + t142 - 0.11e2 / 0.32e2 * g - lambda / 0.4e1) * t138;
      t156 = (t62 + t21 * (-t26 + 0.9e1 / 0.16e2) + t1 * (t52 - 0.5e1 / 0.8e1 * y + 0.1e1 / 0.16e2) + t52 / 0.16e2) ^ 2;
      t157 = 0.1e1 / t156;
      jac_5_1 = t157 * t148 / 0.512e3;
      t187 = 0.3e1 / 0.2e1 * t50;
      t208 = u * y;
      jac_5_2 = t157 * (-(4096 * t33 * t27) + (2048 * t28 * t32) - 0.2048e4 * t47 * (-(4 * t36) + g + 0.5e1 / 0.4e1 * lambda) * u + 0.768e3 * t62 * t46 + 0.2560e4 * t74 * (-t54 + (g + 0.6e1 / 0.5e1 * lambda) * y + 0.3e1 / 0.10e2 * t50 - 0.27e2 / 0.80e2 * g - 0.29e2 / 0.160e3 * lambda) * u - 0.768e3 * t21 * v * (-t66 + t69 + t50 / 0.2e1 - t70 - 0.25e2 / 0.96e2 * lambda) - 0.512e3 * t8 * (t84 + y * (t187 - g - 0.9e1 / 0.16e2 * lambda) - 0.15e2 / 0.32e2 * t50 + 0.39e2 / 0.256e3 * g) * u - 0.96e2 * t1 * (-t66 + y * (-(4 * t50) + g + 0.5e1 / 0.6e1 * lambda) + 0.5e1 / 0.4e1 * t50 - 0.5e1 / 0.32e2 * g + lambda / 0.12e2) * v - 0.32e2 * x * (t142 + t187 - 0.11e2 / 0.16e2 * g - lambda / 0.2e1) * t208 - 0.3e1 * v * (-(8 * t50) - 0.8e1 / 0.3e1 * t36 + g) * y) / 0.512e3;
      t232 = 80 * lambda;
      jac_5_3 = 1 / (32 * t62 + t21 * (-64 * y + 18) + t1 * (32 * t52 - 20 * y + 2) + 2 * t52) * (-384 * lambda * t74 + t8 * (512 * t36 - 80 * g - 144 * lambda) + x * (-128 * t53 + y * (32 * g + t232) + 72 * t50 - 11 * g - 8 * lambda) - 24 * u * v);
      jac_5_4 = 1 / (64 * t62 + t21 * (-128 * y + 36) + t1 * (64 * t52 - 40 * y + 4) + 4 * t52) * (256 * lambda * t21 + t1 * (-256 * t36 + 48 * g + t232) - 24 * t50 - 16 * t36 + 3 * g);
      t283 = y * v;
      jac_5_5 = 1 / (16 * t62 + t21 * (-32 * y + 9) + t1 * (16 * t52 - 10 * y + 1) + t52) * (-192 * u * t74 + 64 * t21 * v + t8 * (256 * t208 - 72 * u) + t1 * (-64 * t283 + 20 * v) + x * (-64 * t138 + 40 * t208 + jac_4_3) - 4 * t283);
      jac(1,3) = jac_1_3;
      jac(2,4) = jac_2_4;
      jac(3,1) = jac_3_1;
      jac(3,2) = jac_3_2;
      jac(3,5) = jac_3_5;
      jac(4,1) = jac_4_1;
      jac(4,2) = jac_4_2;
      jac(4,3) = jac_4_3;
      jac(4,5) = jac_4_5;
      jac(5,1) = jac_5_1;
      jac(5,2) = jac_5_2;
      jac(5,3) = jac_5_3;
      jac(5,4) = jac_5_4;
      jac(5,5) = jac_5_5;      
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function res = DfDt( self, t, x )
      res = zeros(5,1);
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function res = exact( self, t0, x0, t )
      res  = [0;0;0;0;0]*t(:).';
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function res = algebraic( self, t, Z )
      x      = Z(1);
      y      = Z(2);
      u      = Z(3);
      v      = Z(4);
      lambda = Z(5);
      g      = self.g;
      % automatically generated by MAPLE
      t1 = (x ^ 2);
      t2 = (t1 ^ 2);
      t6 = (y ^ 2);
      res_1 = t2 + t1 * (-2 * y + 1) + t6 - 1;
      res_2 = 4 * t1 * x * u - 2 * t1 * v + (-4 * y + 2) * u * x + 2 * y * v;
      t33 = u ^ 2;
      t47 = v ^ 2;
      res_3 = -64 * lambda * t2 * t1 + t2 * ((128 * y - 36) * lambda - 16 * g) + t1 * (lambda * (-64 * t6 + 40 * y - 4) + 16 * g * y + 16 * t33 - 5 * g) - 8 * v * x * u - 4 * t6 * lambda + y * (-8 * t33 + g) + 2 * t33 + 2 * t47;
      res    = zeros(3,1);
      res(1) = res_1;
      res(2) = res_2;
      res(3) = res_3;
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function hjac = DalgebraicDx( self, t, Z )
      x      = Z(1);
      y      = Z(2);
      u      = Z(3);
      v      = Z(4);
      lambda = Z(5);
      g      = self.g;
      % automatically generated by MAPLE
      hjac = zeros(3,5);
      t1 = (x ^ 2);
      t2 = (t1 * x);
      hjac_1_1 = -4 * x * y + 4 * t2 + 2 * x;
      hjac_1_2 = -2 * t1 + 2 * y;
      t12 = v * x;
      hjac_2_1 = u * (12 * t1 - 4 * y + 2) - 4 * t12;
      t14 = u * x;
      hjac_2_2 = -4 * t14 + 2 * v;
      hjac_2_3 = hjac_1_1;
      hjac_2_4 = hjac_1_2;
      t17 = t1 ^ 2;
      t27 = y ^ 2;
      t34 = u ^ 2;
      hjac_3_1 = -384 * lambda * t17 * x + t2 * ((512 * y - 144) * lambda - 64 * g) + x * (lambda * (-128 * t27 + 80 * y - 8) + 32 * g * y + 32 * t34 - 10 * g) - 8 * u * v;
      t42 = 128 * y;
      hjac_3_2 = lambda * (128 * t17 + t1 * (-t42 + 40) - 8 * y) + 16 * g * t1 - 8 * t34 + g;
      hjac_3_3 = u * (32 * t1 - 16 * y + 4) - 8 * t12;
      hjac_3_4 = -8 * t14 + 4 * v;
      hjac_3_5 = -64 * t17 * t1 + t17 * (t42 - 36) + t1 * (-64 * t27 + 40 * y - 4) - 4 * t27;
      hjac(1,1) = hjac_1_1;
      hjac(1,2) = hjac_1_2;
      hjac(2,1) = hjac_2_1;
      hjac(2,2) = hjac_2_2;
      hjac(2,3) = hjac_2_3;
      hjac(2,4) = hjac_2_4;
      hjac(3,1) = hjac_3_1;
      hjac(3,2) = hjac_3_2;
      hjac(3,3) = hjac_3_3;
      hjac(3,4) = hjac_3_4;
      hjac(3,5) = hjac_3_5;
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  end
end
