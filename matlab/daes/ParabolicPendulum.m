%
% Matlab code for the Course:
%
%     Modelling and Simulation Mechatronics System
%
% by
% Enrico Bertolazzi
% Dipartimento di Ingegneria Industriale
% Universita` degli Studi di Trento
% email: enrico.bertolazzi@unitn.it
%
classdef ParabolicPendulum < ODEbaseClass
  properties (SetAccess = protected, Hidden = true)
    g
  end
  methods
    function self = ParabolicPendulum( mu )
      self@ODEbaseClass('ParabolicPendulum');
      self.g = 9.81;
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function res = f( self, t, xx )
      x      = xx(1);
      y      = xx(2);
      u      = xx(3);
      v      = xx(4);
      lambda = xx(5);
      g      = self.g;
      % automatically generated by MAPLE
      ode1 = u;
      ode2 = v;
      t1   = (x ^ 2);
      t3   = 4 * y;
      ode3 = -2 * x * (lambda * (4 * t1 - t3 + 1) + g);
      t9   = t1 ^ 2;
      t19  = (u ^ 2);
      ode4 = (lambda * (32 * t9 + t1 * (-32 * y + 12) - t3)) / 0.2e1 + (4 * g * t1) - (2 * t19) + g / 0.2e1;
      t45  = y ^ 2;
      t46  = 4 * t45;
      ode5 = 0.1e1 / (64 * t9 * t1 + t9 * (-128 * y + 36) + t1 * (64 * t45 - 40 * y + 4) + t46) * (-(768 * lambda * t9 * x * u) + (256 * lambda * t9 * v) - 0.160e3 * t1 * x * ((-0.32e2 / 0.5e1 * y + 0.9e1 / 0.5e1) * lambda + g) * u + 0.48e2 * t1 * v * ((-0.16e2 / 0.3e1 * y + 0.5e1 / 0.3e1) * lambda + g) + 0.64e2 * x * (0.3e1 / 0.4e1 * t19 + lambda * (-t46 + 0.5e1 / 0.2e1 * y - 0.1e1 / 0.4e1) + g * (y - 0.11e2 / 0.32e2)) * u + 0.3e1 * v * (-(8 * t19) - 0.16e2 / 0.3e1 * y * lambda + g));
      res  = [ode1; ode2; ode3; ode4; ode5];
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function jac = DfDx( self, t, xx )
      x      = xx(1);
      y      = xx(2);
      u      = xx(3);
      v      = xx(4);
      lambda = xx(5);
      g      = self.g;
      % automatically generated by MAPLE
      jac = zeros(5,5);
      t1 = (x ^ 2);
      t6 = 4 * t1 - 4 * y + 1;
      jac(3,1) = -16 * lambda * t1 - 2 * lambda * t6 - 2 * g;
      t10 = t1 * x;
      t13 = -32 * y + 12;
      jac(4,1) = (lambda * (2 * x * t13 + 128 * t10)) / 0.2e1 + (8 * x * g);
      t21 = t1 ^ 2;
      t29 = -0.32e2 / 0.5e1 * y + 0.9e1 / 0.5e1;
      t31 = lambda * t29 + g;
      t32 = t31 * u;
      t36 = -0.16e2 / 0.3e1 * y + 0.5e1 / 0.3e1;
      t38 = lambda * t36 + g;
      t39 = v * t38;
      t42 = u ^ 2;
      t44 = y ^ 2;
      t45 = 4 * t44;
      t47 = -t45 + 0.5e1 / 0.2e1 * y - 0.1e1 / 0.4e1;
      t51 = 0.3e1 / 0.4e1 * t42 + lambda * t47 + g * (y - 0.11e2 / 0.32e2);
      t52 = t51 * u;
      t57 = 128 * y;
      t58 = -t57 + 36;
      t62 = 64 * t44 - 40 * y + 4;
      t64 = 64 * t21 * t1 + t1 * t62 + t21 * t58 + t45;
      t65 = 1 / t64;
      t67 = t21 * x;
      t68 = t67 * u;
      t71 = t21 * v;
      t81 = y * lambda;
      t87 = t64 ^ 2;
      t89 = 0.1e1 / t87 * (-0.768e3 * lambda * t68 + 0.256e3 * lambda * t71 - 0.160e3 * t10 * t32 + 0.48e2 * t1 * t39 + 0.64e2 * x * t52 + 0.3e1 * v * (-0.8e1 * t42 - 0.16e2 / 0.3e1 * t81 + g));
      jac(5,1) = t65 * (0.1024e4 * lambda * t10 * v - 0.3840e4 * lambda * t21 * u - 0.480e3 * t1 * t32 + 0.96e2 * x * t39 + 0.64e2 * t52) - (4 * t10 * t58 + 2 * x * t62 + 384 * t67) * t89;
      jac(3,2) = 8 * x * lambda;
      jac(4,2) = (lambda * (-32 * t1 - 4)) / 0.2e1;
      t107 = 8 * y;
      jac(5,2) = t65 * (0.1024e4 * lambda * t10 * u - 0.256e3 * lambda * t1 * v + 0.64e2 * x * (lambda * (-t107 + 0.5e1 / 0.2e1) + g) * u - 0.16e2 * lambda * v) - (-128 * t21 + t1 * (t57 - 40) + t107) * t89;
      jac(1,3) = 1;
      jac(4,3) = -0.4e1 * u;
      jac(5,3) = t65 * (-(768 * lambda * t67) - 0.160e3 * t10 * t31 + 0.96e2 * x * t42 + 0.64e2 * x * t51 - 0.48e2 * u * v);
      jac(2,4) = 1;
      jac(5,4) = t65 * ((256 * lambda * t21) + 0.48e2 * t1 * t38 + (3 * g) - 0.24e2 * t42 - (16 * t81));
      jac(3,5) = -2 * x * t6;
      jac(4,5) = (16 * t21) + (t1 * t13) / 0.2e1 - (2 * y);
      jac(5,5) = t65 * (0.48e2 * t1 * v * t36 - 0.160e3 * t10 * t29 * u + 0.64e2 * x * t47 * u - 0.16e2 * y * v - 0.768e3 * t68 + 0.256e3 * t71);
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function res = DfDt( self, t, x )
      res = zeros(5,1);
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function res = exact( self, t0, x0, t )
      res  = [0;0;0;0;0]*t(:).';
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function res = hidden( self, t, xx )
      x      = xx(1);
      y      = xx(2);
      u      = xx(3);
      v      = xx(4);
      lambda = xx(5);
      g      = self.g;
      % automatically generated by MAPLE
      res    = zeros(3,1);
      t1     = (x ^ 2);
      t3     = ((t1 - y) ^ 2);
      res(1) = t1 + t3 - 1;
      res(2) = 4 * t1 * x * u - 2 * t1 * v + (-4 * y + 2) * u * x + 2 * y * v;
      t15    = t1 ^ 2;
      t25    = y ^ 2;
      t32    = u ^ 2;
      t46    = v ^ 2;
      res(3) = -64 * lambda * t15 * t1 + t15 * ((128 * y - 36) * lambda - 16 * g) + t1 * (lambda * (-64 * t25 + 40 * y - 4) + 16 * g * y + 16 * t32 - 5 * g) - 8 * u * v * x - 4 * t25 * lambda + y * (-8 * t32 + g) + 2 * t32 + 2 * t46;
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function hjac = DhiddenDx( self, t, xx )
      x      = xx(1);
      y      = xx(2);
      u      = xx(3);
      v      = xx(4);
      lambda = xx(5);
      g      = self.g;
      % automatically generated by MAPLE
      hjac      = zeros(3,5);
      t2        = (x ^ 2);
      t3        = (t2 - y);
      hjac(1,1) = 4 * x * t3 + 2 * x;
      t6        = (t2 * u);
      t8        = v * x;
      t11       = -4 * y + 2;
      hjac(2,1) = u * t11 + 12 * t6 - 4 * t8;
      t13       = (t2 ^ 2);
      t17       = 128 * y;
      t18       = t17 - 36;
      t20       = 16 * g;
      t22       = t2 * x;
      t25       = y ^ 2;
      t28       = -64 * t25 + 40 * y - 4;
      t32       = u ^ 2;
      hjac(3,1) = -384 * lambda * t13 * x + 4 * t22 * (lambda * t18 - t20) + 2 * x * (16 * g * y + lambda * t28 - 5 * g + 16 * t32) - 8 * u * v;
      hjac(1,2) = -2 * t3;
      t41       = u * x;
      hjac(2,2) = -4 * t41 + 2 * v;
      hjac(3,2) = 128 * lambda * t13 + t2 * (lambda * (-t17 + 40) + t20) - 8 * y * lambda - 8 * t32 + g;
      hjac(2,3) = x * t11 + 4 * t22;
      hjac(3,3) = -16 * u * y + 32 * t6 - 8 * t8 + 4 * u;
      hjac(2,4) = hjac(1,2);
      hjac(3,4) = -8 * t41 + 4 * v;
      hjac(3,5) = t13 * t18 - 64 * t13 * t2 + t2 * t28 - 4 * t25;
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    function res = DhiddenDt( self, t, x )
      res = zeros(3,1);
    end
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  end
end
